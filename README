Simple Factory VS Factory method
<br>
Simple Factory method separates object creation logic to Factory (creator) class,
in other words, Factory class decides which object to instantiate based on simple criteria.
While Factory method delegates object creation logic to subclasses of creator class, thus those
subclasses are responsible for deciding which object to instantiate (subclasses provides the actual instance).
\
\
Prototype
\
Prototype comes in handy when object creation is costly. It solves problem
by copying existing object to create new instance but appropriate attributes
need to be set at the time.
\
\
Factory VS Abstract Factory
\
Factory method is a method, and an abstract factory is an object.\
Factory method relies on a subclass to handle desired object instantiation,
while in abstract factory pattern, a class delegates the responsibility of object
instantiation to another object.\
